#!/usr/bin/bash
if [ "$(command -v tmux)" = "" ]; then
    echo "Tmux is not installed"
    exit 1
fi


pgrep tmux > /dev/null
mux_running=$?

function mux(){
     [[ $mux_running -eq 0 ]] && tmux $@
}

LAST_SESSION="$([[ -f /tmp/zellij_last_session ]] && cat /tmp/zellij_last_session)"

home_replacer() {
    HOME_REPLACER=""                                          # default to a noop
    echo "$HOME" | grep -E "^[a-zA-Z0-9\-_/.@]+$" &>/dev/null # chars safe to use in sed
    HOME_SED_SAFE=$?
    if [ $HOME_SED_SAFE -eq 0 ]; then # $HOME should be safe to use in sed
        HOME_REPLACER="s|^$HOME/|~/|"
    fi
    echo "$HOME_REPLACER"
}

transform_home_path() {
    HOME_SED_SAFE=$?
    if [ $HOME_SED_SAFE -eq 0 ]; then
        echo "$1" | sed -e "s|^~/|$HOME/|"
    else
        echo "$1"
    fi
}

fzf_window() {
    fzf --reverse --border "rounded" --info inline --pointer "â†’" --prompt "Session > " --header "Select session" --preview "bash -c \"echo {2} | grep -q 'Session' && echo {} || ls {3}\""
}

set_last_session() {
    echo "$1" > /tmp/zellij_last_session
}

last_session() {
    if [[ -n "$LAST_SESSION" ]]; then
        echo $LAST_SESSION | awk '{ print "("NR")\t[Session]\t"$1 }'
    fi
}

sessions_list_names() {
     mux list-sessions | sed 's/:.*$//'
}

sessions_list(){
    if [[ -n "$LAST_SESSION" ]]; then
        mux list-sessions | sed 's/:.*$//' | grep -v "$(echo $LAST_SESSION)" | awk '{ print "("NR")\t[Session]\t"$1 }'
    else
        sessions_list_names | awk '{ print "("NR")\t[Session]\t"$1 }'
    fi
}

project_list(){
    project_list_session_excluded | tr --truncate-set1 " /" "\n" | awk '{ print "("NR")\t[Directory]\t"$1 }' 
}

project_list_session_excluded(){
    list=$(find /mnt/Projects/ -maxdepth 1 -type d)
    list=$(echo -e "$(realpath ~/dotfiles)\n${list}")
    OLDIFS="$IFS"
    IFS=$'\n'
    foo=$(sessions_list_names)
    bar=$(echo $foo | sed "s/ /\\\|/g")
    for item in $list; do
        echo $item | grep -q "/\($bar\)$"
        if [[ "$?" -eq 0 ]]; then
            continue 2
        fi
        echo $item
    done
    IFS="$OLDIFS"
}

select_project() {
    project_dir=$({ last_session; sessions_list; project_list; } | fzf_window)
    if [ "$project_dir" = "" ]; then
        exit
    fi
    echo "$project_dir"
}

get_sanitized_selected(){
    echo "$1" | sed "s/^([0-9]*)\t\[[^]]*\]\t//"
}

get_session_name() {
    project_dir=$1
    directory=$(basename "$project_dir")
    session_name=$(echo "$directory" | tr ' .:' '_')
    echo "$session_name"
}

if [[ -n "$1" ]]; then
    selected=$(realpath $1)
else
    selected=$(select_project)
fi

if [ -z "$selected" ]; then
    exit 0
fi

cwd=$(get_sanitized_selected "$selected")
session_name=$(get_session_name "$(transform_home_path "$cwd")")
session=$(mux has-session -t="$session_name" 2> /dev/null)
current_session=$(mux list-sessions | grep '(attached)' | grep -o '^[^ :]*')
is_current_session=$(mux list-sessions | grep "^$session_name: .* (created" | grep "(attached)")

set_last_session "$current_session"

if ! mux has-session -t=$session_name 2> /dev/null; then
    tmux new-session -ds $session_name  -x - -y - -c $cwd
fi

if [[ -z $TMUX ]]; then
    tmux attach -t $session_name
else
    tmux switch-client -t $session_name
fi
