####### Theme #######

# Configure the catppuccin plugin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "rounded"

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-right "#{E:@catppuccin_status_application} #{E:@catppuccin_status_session}"

set -g status-position bottom

####### Settings #######

# Fix colors in vim
set -as terminal-features ",$TERM*:RGB"

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# ESC doesn't need timeout
set -s escape-time 10

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Focus events enabled for terminals that support them
set -g focus-events on

# Enable clipboard in neovim
set -g set-clipboard on

# Reload config
TMUX_CONF="~/.config/tmux/tmux.conf"
bind r source-file $TMUX_CONF \; display "#{TMUX_CONF} sourced"

bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

bind C-c new-session

bind C-f command-prompt -p find-session 'switch-client -t %%'

# kill tab
bind q killp

# Open a new pane
bind - split-window -v
bind \\ split-window -h

# swap current pane with the next one
bind > swap-pane -D

# swap current pane with the previous one
bind < swap-pane -U

bind -r C-h resize-pane -L 2
bind -r C-j resize-pane -D 2
bind -r C-k resize-pane -U 2
bind -r C-l resize-pane -R 2

# move to last session
bind Tab switch-client -l

# move to last active window (Shift+Tab)
bind BTab last-window
bind -r H previous-window
bind -r L next-window

# enter copy mode
bind -r Enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

bind b list-buffers
bind v paste-buffer -p
bind P choose-buffer

# Add t for creating new tab
unbind c
bind t new-window

# Search mode
bind s copy-mode

# Edit buffer
bind-key e 'capture-pane' \; capture-pane -S - \; save-buffer /tmp/tmux \; delete-buffer

# Floating window
bind -r w popup -d '#{pane_current_path}' -E -w 90% -h 90% sessions
bind -r g popup -d '#{pane_current_path}' -E -w 90% -h 90% lazygit
bind -r \; if-shell "tmux display-message -p '#S' | grep 'scratch$'" {
    detach-client
  } {
    run-shell "tmux display-message -p '#S-scratch' > /tmp/tmux-scratch"
    if-shell "tmux has-session -t '#S-scratch' && exit 1 || exit 0" {
        new-session -d -c '#{pane_current_path}' -s '#S-scratch'
        set-option -t '#S-scratch' status off
    }
    display-popup -E -w 90% -h 90% "tmux attach-session -t $(cat /tmp/tmux-scratch)"
}


####### Plugins #######

set -g @plugin 'tmux-plugins/tpm'

# Theme
set -g @plugin 'catppuccin/tmux#v2.1.2'

# Fuzzy search on autocomplete
# set -g @plugin 'laktak/extrakto'

# Generate a good name for each window
# Install: yay -S python-libtmux
set -g @plugin 'ofirgall/tmux-window-name'

# Copy to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# Restore sessions after restart
set -g @plugin 'tmux-plugins/tmux-resurrect'

# NVim navigator
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager
run '~/.config/tmux/plugins/tpm/tpm'
